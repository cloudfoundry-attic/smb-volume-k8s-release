#@ load("@ytt:data", "data")

apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/instance: eirini-persi
    app.kubernetes.io/name: eirini-persi
  name: eirini-persi
spec:
  automountServiceAccountToken: false
  volumes:
    - name: register-secret-volume
      secret:
        secretName: eirini-persi-volume-services-register
    - name: start-secret-volume
      secret:
        secretName: eirini-persi-volume-services-start
  containers:
  - image: #@ data.values.image.repository + ":" + data.values.image.tag
    imagePullPolicy: Always
    name: eirini-persi-start
    command: ["/app/main"]
    args: ["start"]
    env:
    - name: OPERATOR_WEBHOOK_HOST
      value: 0.0.0.0
    - name: OPERATOR_WEBHOOK_PORT
      value: "443"
    - name: OPERATOR_SERVICE_NAME
      value: "eirini-persi-svc"
    - name: OPERATOR_WEBHOOK_NAMESPACE
      value: "eirini"
    - name: EIRINI_EXTENSION_REGISTER
      value: "false"
    ports:
    - containerPort: 443
      name: http
      protocol: TCP
    volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: start-secret-volume
  initContainers:
  - image: #@ data.values.image.repository + ":" + data.values.image.tag
    imagePullPolicy: Always
    name: eirini-persi-register
    command: ["/app/main"]
    args: ["register"]
    env:
    - name: OPERATOR_WEBHOOK_HOST
      value: 0.0.0.0
    - name: OPERATOR_WEBHOOK_PORT
      value: "443"
    - name: OPERATOR_SERVICE_NAME
      value: "eirini-persi-svc"
    - name: OPERATOR_WEBHOOK_NAMESPACE
      value: "eirini"
    volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: register-secret-volume
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300